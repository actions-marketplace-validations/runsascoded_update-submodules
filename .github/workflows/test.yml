name: Test git-update-submodules
on:
  push:
    branches: [ test ]
  workflow_dispatch:
    inputs:
      ref:
        description: 'git-update-submodules ref to install'
        required: true
      init:
        description: "Initial commit to initialize this test's branch to"
        default: 'b72d4de78127f569d106e665767298a5004baffa'
env:
  GH_TOKEN: ${{ github.token }}
jobs:
  test:
    name: Test git-update-submodules
    runs-on: ubuntu-latest
    steps:
      - name: Set env vars
        run: |
          echo "REF=${{ inputs.ref || (github.event.pull_request && github.head_ref || github.ref_name) }}" >> $GITHUB_ENV
          echo "URL=https://github.com/$GITHUB_REPOSITORY" >> $GITHUB_ENV
          echo "branch=test-${{ github.run_id }}" >> $GITHUB_ENV
      - name: Install git-update-submodules
        run: pip install git+$URL@$REF
      - name: Initialize test branch
        run: gh api -XPOST /repos/$GITHUB_REPOSITORY/git/refs -fref=refs/heads/$branch -fsha=${{ inputs.init }}
      - uses: webiny/action-post-run@3.0.0
        with:
          run: |
            echo "Cleaning up test branch $branch"
            gh api -XDELETE /repos/$GITHUB_REPOSITORY/git/refs/heads/$branch
      - name: Update submodules
        run: github-update-submodules -b$branch
      - name: Verify submodule updates
        run: |
          echo "Branch $branch"
          commit="$(gh api /repos/$GITHUB_REPOSITORY/git/ref/heads/$branch | jq -r .object.sha)"
          echo "commit: $commit"
          tree="$(gh api /repos/$GITHUB_REPOSITORY/git/commits/$commit | jq -r .tree.sha)"
          echo "tree: $tree"
          elems="$(gh api /repos/$GITHUB_REPOSITORY/git/trees/$tree | jq -c '.tree | map({ "key": .path, "value": .sha }) | from_entries')"
          echo "elems: $elems"
          [ "$elems" == '{".gitmodules":"7816159e836aec22afcbcb75f56f706883890054","test0":"3b995a2263dfe6cda3056d8e05f21acaf572c197","test1":"5fa3df2775b822d0e61ec838eee87adb498d9294"}' ]
